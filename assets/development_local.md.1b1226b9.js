import{_ as t,c as a,a as e,b as s,t as o,d as r,o as i}from"./app.c0255b8e.js";const C=JSON.parse('{"title":"Setting up your local development environment","description":"","frontmatter":{"title":"Setting up your local development environment","editLink":true},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Requirements for development","slug":"requirements-for-development","link":"#requirements-for-development","children":[]},{"level":2,"title":"Running the web and API services","slug":"running-the-web-and-api-services","link":"#running-the-web-and-api-services","children":[{"level":3,"title":"1. Start docker-compose","slug":"_1-start-docker-compose","link":"#_1-start-docker-compose","children":[]},{"level":3,"title":"2. Open the browser","slug":"_2-open-the-browser","link":"#_2-open-the-browser","children":[]},{"level":3,"title":"3. Login with the test account","slug":"_3-login-with-the-test-account","link":"#_3-login-with-the-test-account","children":[]}]},{"level":2,"title":"Frontend Development","slug":"frontend-development","link":"#frontend-development","children":[]},{"level":2,"title":"Running the puppeteer-parse service outside of Docker","slug":"running-the-puppeteer-parse-service-outside-of-docker","link":"#running-the-puppeteer-parse-service-outside-of-docker","children":[{"level":3,"title":"1. Install and configure Chromium","slug":"_1-install-and-configure-chromium","link":"#_1-install-and-configure-chromium","children":[]},{"level":3,"title":"2. Navigate to the service directory, setup your env file, and install dependencies","slug":"_2-navigate-to-the-service-directory-setup-your-env-file-and-install-dependencies","link":"#_2-navigate-to-the-service-directory-setup-your-env-file-and-install-dependencies","children":[]},{"level":3,"title":"3. Start the service","slug":"_3-start-the-service","link":"#_3-start-the-service","children":[]}]}],"relativePath":"development/local.md","lastUpdated":1707606639000}'),l={name:"development/local.md"},c={id:"frontmatter-title",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=r(`<nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#requirements-for-development">Requirements for development</a></li><li><a href="#running-the-web-and-api-services">Running the web and API services</a><ul><li><a href="#_1-start-docker-compose">1. Start docker-compose</a></li><li><a href="#_2-open-the-browser">2. Open the browser</a></li><li><a href="#_3-login-with-the-test-account">3. Login with the test account</a></li></ul></li><li><a href="#frontend-development">Frontend Development</a></li><li><a href="#running-the-puppeteer-parse-service-outside-of-docker">Running the puppeteer-parse service outside of Docker</a><ul><li><a href="#_1-install-and-configure-chromium">1. Install and configure Chromium</a></li><li><a href="#_2-navigate-to-the-service-directory-setup-your-env-file-and-install-dependencies">2. Navigate to the service directory, setup your env file, and install dependencies</a></li><li><a href="#_3-start-the-service">3. Start the service</a></li></ul></li></ul></nav><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>The easiest way to get started with local development is to use <code>docker-compose up</code>. This will start a postgres container, our web frontend, an API server, and our content fetching microservice.</p><h2 id="requirements-for-development" tabindex="-1">Requirements for development <a class="header-anchor" href="#requirements-for-development" aria-hidden="true">#</a></h2><p>Omnivore is written in TypeScript and JavaScript.</p><ul><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node</a> -- currently we are using Node.js v14.18</li><li><a href="https://www.chromium.org/chromium-projects/" target="_blank" rel="noreferrer">Chromium</a> -- see below for installation info</li></ul><h2 id="running-the-web-and-api-services" tabindex="-1">Running the web and API services <a class="header-anchor" href="#running-the-web-and-api-services" aria-hidden="true">#</a></h2><h3 id="_1-start-docker-compose" tabindex="-1">1. Start docker-compose <a class="header-anchor" href="#_1-start-docker-compose" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/omnivore-app/omnivore</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">omnivore</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span></span>
<span class="line"></span></code></pre></div><p>This will start postgres, initialize the database, and start the web and api services.</p><h3 id="_2-open-the-browser" tabindex="-1">2. Open the browser <a class="header-anchor" href="#_2-open-the-browser" aria-hidden="true">#</a></h3><p>Open <code>http://localhost:3000</code> and confirm Omnivore is running</p><h3 id="_3-login-with-the-test-account" tabindex="-1">3. Login with the test account <a class="header-anchor" href="#_3-login-with-the-test-account" aria-hidden="true">#</a></h3><p>During database setup docker-compose creates an account <code>demo@omnivore.app</code>, password: <code>demo_password</code>.</p><p>Go to <code>http://localhost:3000/</code> in your browser and choose <code>Continue with Email</code> to login.</p><h2 id="frontend-development" tabindex="-1">Frontend Development <a class="header-anchor" href="#frontend-development" aria-hidden="true">#</a></h2><p>If you want to work on just the frontend of Omnivore you can run the backend services with docker compose and the frontend locally:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">content-fetch</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/web</span></span>
<span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env.template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span></code></pre></div><h2 id="running-the-puppeteer-parse-service-outside-of-docker" tabindex="-1">Running the puppeteer-parse service outside of Docker <a class="header-anchor" href="#running-the-puppeteer-parse-service-outside-of-docker" aria-hidden="true">#</a></h2><p>To save pages you need to run the <code>puppeteer-parse</code> service.</p><h3 id="_1-install-and-configure-chromium" tabindex="-1">1. Install and configure Chromium <a class="header-anchor" href="#_1-install-and-configure-chromium" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">brew install chromium --no-quarantine</span></span>
<span class="line"><span style="color:#A6ACCD;">export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true</span></span>
<span class="line"><span style="color:#A6ACCD;">export CHROMIUM_PATH=\`which chromium\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_2-navigate-to-the-service-directory-setup-your-env-file-and-install-dependencies" tabindex="-1">2. Navigate to the service directory, setup your env file, and install dependencies <a class="header-anchor" href="#_2-navigate-to-the-service-directory-setup-your-env-file-and-install-dependencies" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd packages/puppeteer-parse</span></span>
<span class="line"><span style="color:#A6ACCD;">cp .env.example .env</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_3-start-the-service" tabindex="-1">3. Start the service <a class="header-anchor" href="#_3-start-the-service" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yarn start</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>This will start the puppeteer-parse service on port 9090.</p><p>In your browser go to <code>http://localhost:3000/home</code>, click the <code>Add Link</code> button, and enter a URL such as <code>https://blog.omnivore.app/p/getting-started-with-omnivore</code>.</p><p>You should see a Chromium window open and navigate to your link. When the service is done fetching your content you will see it in your library.</p>`,29);function h(n,u,v,m,g,f){return i(),a("div",null,[e("h1",c,[s(o(n.$frontmatter.title)+" ",1),p]),d])}const _=t(l,[["render",h]]);export{C as __pageData,_ as default};
