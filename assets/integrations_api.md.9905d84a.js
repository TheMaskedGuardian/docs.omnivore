import{_ as a}from"./chunks/web-create-api-token.013f57e0.js";import{_ as o,c as r,a as e,b as i,t as n,d as s,o as l}from"./app.8e8bab01.js";const y=JSON.parse('{"title":"API","description":"","frontmatter":{"title":"API","editLink":true},"headers":[{"level":2,"title":"Getting an API token","slug":"getting-an-api-token","link":"#getting-an-api-token","children":[]},{"level":2,"title":"The GraphQL API","slug":"the-graphql-api","link":"#the-graphql-api","children":[{"level":3,"title":"Commonly used methods","slug":"commonly-used-methods","link":"#commonly-used-methods","children":[]},{"level":3,"title":"Saving a URL with the API","slug":"saving-a-url-with-the-api","link":"#saving-a-url-with-the-api","children":[]}]},{"level":2,"title":"Sample Apps:","slug":"sample-apps","link":"#sample-apps","children":[]},{"level":2,"title":"Saving requests from the browser","slug":"saving-requests-from-the-browser","link":"#saving-requests-from-the-browser","children":[]}],"relativePath":"integrations/api.md","lastUpdated":1707894626000}'),p={name:"integrations/api.md"},h={id:"frontmatter-title",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=s('<nav class="table-of-contents"><ul><li><a href="#getting-an-api-token">Getting an API token</a></li><li><a href="#the-graphql-api">The GraphQL API</a><ul><li><a href="#commonly-used-methods">Commonly used methods</a></li><li><a href="#saving-a-url-with-the-api">Saving a URL with the API</a></li></ul></li><li><a href="#sample-apps">Sample Apps:</a></li><li><a href="#saving-requests-from-the-browser">Saving requests from the browser</a></li></ul></nav><p>Omnivore exposes a graphql API that can be authenticated with an API token, this is usually used when connecting to Omnivore from your desktop, mobile app, or local computer.</p><p>Omnivore&#39;s frontend also exposes a frontend endpoint at <a href="https://omnivore.app/api/save" target="_blank" rel="noreferrer">https://omnivore.app/api/save</a> for saving to your library in the browser. This endpoint will use your browser cookie to authenticate. This is normally used for integrating with other readers, like <a href="https://www.inoreader.com/" target="_blank" rel="noreferrer">Inoreader</a>.</p><h2 id="getting-an-api-token" tabindex="-1">Getting an API token <a class="header-anchor" href="#getting-an-api-token" aria-hidden="true">#</a></h2><ul><li>Go to <a href="https://omnivore.app/settings/api" target="_blank" rel="noreferrer">/settings/api</a></li><li>Click <code>Create</code></li><li>Choose a descriptive name for your API key</li><li>Choose an expiration time. When an API key expires it will stop working.</li><li>Copy the API key to your pasteboard.</li></ul><p><img src="'+a+`" alt="Creating an API token"></p><div class="tip custom-block"><p class="custom-block-title">Once your API key is created you will not be able to access it&#39;s value again.</p></div><p>Your API key should be added to requests in the <code>Authorization</code> header. Here is a sample GQL request using an API token with the value <code>FFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF</code>:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">curl -X POST -d &#39;{ &quot;query&quot;: &quot;query Viewer { me { id name } }&quot; }&#39; -H &#39;content-type: application/json&#39; -H &#39;authorization: FFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF&#39; https://api-prod.omnivore.app/api/graphql</span></span>
<span class="line"><span style="color:#A6ACCD;">{&quot;data&quot;:{&quot;me&quot;:{&quot;id&quot;:&quot;&lt;your user id&gt;&quot;,&quot;name&quot;:&quot;&lt;your full name&gt;&quot;}}}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="the-graphql-api" tabindex="-1">The GraphQL API <a class="header-anchor" href="#the-graphql-api" aria-hidden="true">#</a></h2><p>Reference documentation is not created for the GraphQL API, but the schema can be accessed <a href="https://github.com/omnivore-app/omnivore/blob/main/packages/api/src/schema.ts" target="_blank" rel="noreferrer">on GitHub</a>.</p><h3 id="commonly-used-methods" tabindex="-1">Commonly used methods <a class="header-anchor" href="#commonly-used-methods" aria-hidden="true">#</a></h3><ul><li><code>search</code>: Return a set of pages based on a search term. Use an empty string to get all pages.</li><li><code>article</code>: Get a single article and its content</li><li><code>saveUrl</code>: Save a URL</li><li><code>savePage</code>: Save a page with supplied HTML content</li></ul><h3 id="saving-a-url-with-the-api" tabindex="-1">Saving a URL with the API <a class="header-anchor" href="#saving-a-url-with-the-api" aria-hidden="true">#</a></h3><p>To save a URL you can use the <code>saveUrl</code> GQL endpoint, note that there are three required parameters:</p><ul><li>url: The url you would like to save for example <code>https://blog.omnivore.app/p/contributing-to-omnivore</code></li><li>clientRequestId: A unique id for this request. This can be generated using a uuid library, and is used to look up requests on subsequent API calls. For example: <code>85282635-4DF4-4BFC-A3D4-B3A004E57067</code></li><li>source: Set this to <code>api</code>, this helps us differentiate the way a URL is being saved.</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">curl -X POST -d &#39;{ &quot;query&quot;: &quot;mutation SaveUrl($input: SaveUrlInput!) { saveUrl(input: $input) { ... on SaveSuccess { url clientRequestId } ... on SaveError { errorCodes message } } }&quot;, &quot;variables&quot;: { &quot;input&quot;: { &quot;clientRequestId&quot;: &quot;85282635-4DF4-4BFC-A3D4-B3A004E57067&quot;, &quot;source&quot;: &quot;api&quot;, &quot;url&quot;: &quot;https://blog.omnivore.app/p/contributing-to-omnivore&quot; }} }&#39; -H &#39;content-type: application/json&#39; -H &#39;authorization: &lt;your api key&gt;&#39; https://api-prod.omnivore.app/api/graphql</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="sample-apps" tabindex="-1">Sample Apps: <a class="header-anchor" href="#sample-apps" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/Rnbsov/Omnivore-Telegram-Bot" target="_blank" rel="noreferrer">Omnivore Telegram Bot ðŸ¤–</a>: Save articles or Inline query them to share recent findings with friends âœ¨</li><li><a href="https://github.com/davidohlin/instapaper-to-omnivore-import" target="_blank" rel="noreferrer">omnivore-import</a>: A typescript tool for importing a library previously exported from Instapaper (written in TypeScript)</li><li><a href="https://github.com/laurentkempe/omnivore-api-demo-csharp" target="_blank" rel="noreferrer">omnivore-api-demo-csharp</a>: Download all your articles and save in Markdown format (written in C#)</li><li><a href="https://github.com/yazdipour/OmnivoreQL" target="_blank" rel="noreferrer">OmnivoreQL</a>: GraphQL omnivore client for Python (written in Python)</li><li><a href="https://github.com/yazdipour/OmnivoreX" target="_blank" rel="noreferrer">OmnivoreX</a>: Text User Interface Omnivore Client to read articles in command line in Markdown format (written in Python)</li><li><a href="https://github.com/edleeman17/omnivore-opml-import" target="_blank" rel="noreferrer">omnivore-opml-import</a>: A simple tool for importing OPML feeds into Omnivore (written in Javascript)</li></ul><h2 id="saving-requests-from-the-browser" tabindex="-1">Saving requests from the browser <a class="header-anchor" href="#saving-requests-from-the-browser" aria-hidden="true">#</a></h2><p>Requests can be made to the frontend endpoint <a href="https://omnivore.app/api/save" target="_blank" rel="noreferrer">https://omnivore.app/api/save</a> in the browser.</p><p>When using this endpoint your browser cookie will be used to authenticate and authorize the request. Labels can be added using the <code>labels</code> query param: <code>https://omnivore.app/api/save?url=&lt;the url&gt;&amp;labels=&lt;Label1&gt;&amp;labels=&lt;Label2&gt;&amp;labels=&lt;Label3&gt;</code> for example: <a href="https://omnivore.app/api/save?url=https://blog.omnivore.app/p/whats-new-in-omnivore&amp;labels=Reading1&amp;labels=Software" target="_blank" rel="noreferrer">https://omnivore.app/api/save?url=https://blog.omnivore.app/p/whats-new-in-omnivore&amp;labels=Reading1&amp;labels=Software</a></p>`,22);function c(t,m,g,v,b,f){return l(),r("div",null,[e("h1",h,[i(n(t.$frontmatter.title)+" ",1),u]),d])}const k=o(p,[["render",c]]);export{y as __pageData,k as default};
