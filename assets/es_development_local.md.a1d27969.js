import{_ as s,c as n,a as e,b as o,t as r,d as i,o as l}from"./app.15727171.js";const f=JSON.parse('{"title":"Configuración de su entorno de desarrollo local","description":"","frontmatter":{"title":"Configuración de su entorno de desarrollo local","editLink":true},"headers":[{"level":2,"title":"Introducción","slug":"introduccion","link":"#introduccion","children":[]},{"level":2,"title":"Requisitos para el desarrollo","slug":"requisitos-para-el-desarrollo","link":"#requisitos-para-el-desarrollo","children":[]},{"level":2,"title":"Ejecución de los servicios web y API","slug":"ejecucion-de-los-servicios-web-y-api","link":"#ejecucion-de-los-servicios-web-y-api","children":[{"level":3,"title":"1. Inicie docker-compose","slug":"_1-inicie-docker-compose","link":"#_1-inicie-docker-compose","children":[]},{"level":3,"title":"2. Abra el navegador","slug":"_2-abra-el-navegador","link":"#_2-abra-el-navegador","children":[]},{"level":3,"title":"3. Cree una cuenta de prueba","slug":"_3-cree-una-cuenta-de-prueba","link":"#_3-cree-una-cuenta-de-prueba","children":[]}]},{"level":2,"title":"Desarrollo Frontend","slug":"desarrollo-frontend","link":"#desarrollo-frontend","children":[]},{"level":2,"title":"Ejecutando el servicio puppeteer-parse fuera de Docker","slug":"ejecutando-el-servicio-puppeteer-parse-fuera-de-docker","link":"#ejecutando-el-servicio-puppeteer-parse-fuera-de-docker","children":[{"level":3,"title":"1. Instale y configure Chromium","slug":"_1-instale-y-configure-chromium","link":"#_1-instale-y-configure-chromium","children":[]},{"level":3,"title":"2. Navegue hasta el directorio de servicios, configure su archivo env e instale las dependencias","slug":"_2-navegue-hasta-el-directorio-de-servicios-configure-su-archivo-env-e-instale-las-dependencias","link":"#_2-navegue-hasta-el-directorio-de-servicios-configure-su-archivo-env-e-instale-las-dependencias","children":[]},{"level":3,"title":"3. Inicie el servicio","slug":"_3-inicie-el-servicio","link":"#_3-inicie-el-servicio","children":[]}]}],"relativePath":"es/development/local.md","lastUpdated":1682580431000}'),c={name:"es/development/local.md"},t={id:"frontmatter-title",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=i(`<nav class="table-of-contents"><ul><li><a href="#introduccion">Introducción</a></li><li><a href="#requisitos-para-el-desarrollo">Requisitos para el desarrollo</a></li><li><a href="#ejecucion-de-los-servicios-web-y-api">Ejecución de los servicios web y API</a><ul><li><a href="#_1-inicie-docker-compose">1. Inicie docker-compose</a></li><li><a href="#_2-abra-el-navegador">2. Abra el navegador</a></li><li><a href="#_3-cree-una-cuenta-de-prueba">3. Cree una cuenta de prueba</a></li></ul></li><li><a href="#desarrollo-frontend">Desarrollo Frontend</a></li><li><a href="#ejecutando-el-servicio-puppeteer-parse-fuera-de-docker">Ejecutando el servicio puppeteer-parse fuera de Docker</a><ul><li><a href="#_1-instale-y-configure-chromium">1. Instale y configure Chromium</a></li><li><a href="#_2-navegue-hasta-el-directorio-de-servicios-configure-su-archivo-env-e-instale-las-dependencias">2. Navegue hasta el directorio de servicios, configure su archivo env e instale las dependencias</a></li><li><a href="#_3-inicie-el-servicio">3. Inicie el servicio</a></li></ul></li></ul></nav><h2 id="introduccion" tabindex="-1">Introducción <a class="header-anchor" href="#introduccion" aria-hidden="true">#</a></h2><p>La forma más fácil de comenzar con el desarrollo local es usar <code>docker-compose up</code>. Esto iniciará un contenedor de Postgres, nuestra interfaz web, un servidor API y nuestro microservicio de obtención de contenido.</p><h2 id="requisitos-para-el-desarrollo" tabindex="-1">Requisitos para el desarrollo <a class="header-anchor" href="#requisitos-para-el-desarrollo" aria-hidden="true">#</a></h2><p>Omnívore está escrito en TypeScript y JavaScript.</p><ul><li><a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node</a> -- actualmente estamos usando Node.js v14.18</li><li><a href="https://www.chromium.org/chromium-projects/" target="_blank" rel="noreferrer">Chromium</a> -- ver abajo para información de instalación</li></ul><h2 id="ejecucion-de-los-servicios-web-y-api" tabindex="-1">Ejecución de los servicios web y API <a class="header-anchor" href="#ejecucion-de-los-servicios-web-y-api" aria-hidden="true">#</a></h2><h3 id="_1-inicie-docker-compose" tabindex="-1">1. Inicie docker-compose <a class="header-anchor" href="#_1-inicie-docker-compose" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/omnivore-app/omnivore</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">omnivore</span></span>
<span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span></span>
<span class="line"></span></code></pre></div><p>Esto iniciará Postgres, inicializará la base de datos e iniciará los servicios web y API.</p><h3 id="_2-abra-el-navegador" tabindex="-1">2. Abra el navegador <a class="header-anchor" href="#_2-abra-el-navegador" aria-hidden="true">#</a></h3><p>Abra <code>http://localhost:3000</code> y confirme que Omnivore se está ejecutando</p><h3 id="_3-cree-una-cuenta-de-prueba" tabindex="-1">3. Cree una cuenta de prueba <a class="header-anchor" href="#_3-cree-una-cuenta-de-prueba" aria-hidden="true">#</a></h3><p>Omnivore usa inicio de sesión social, pero para probar hay un correo electrónico + contraseña opcional.</p><p>Vaya a <code>http://localhost:3000/auth/email-signup</code> en su navegador.</p><h2 id="desarrollo-frontend" tabindex="-1">Desarrollo Frontend <a class="header-anchor" href="#desarrollo-frontend" aria-hidden="true">#</a></h2><p>Si desea trabajar solo en la interfaz de Omnivore, puede ejecutar los servicios de backend con docker compose y la interfaz localmente:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">content-fetch</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">packages/web</span></span>
<span class="line"><span style="color:#FFCB6B;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env.template</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.env</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>
<span class="line"></span></code></pre></div><h2 id="ejecutando-el-servicio-puppeteer-parse-fuera-de-docker" tabindex="-1">Ejecutando el servicio puppeteer-parse fuera de Docker <a class="header-anchor" href="#ejecutando-el-servicio-puppeteer-parse-fuera-de-docker" aria-hidden="true">#</a></h2><p>Para guardar páginas, debe ejecutar el servicio <code>puppeteer-parse</code>.</p><h3 id="_1-instale-y-configure-chromium" tabindex="-1">1. Instale y configure Chromium <a class="header-anchor" href="#_1-instale-y-configure-chromium" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">brew install chromium --no-quarantine</span></span>
<span class="line"><span style="color:#A6ACCD;">export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true</span></span>
<span class="line"><span style="color:#A6ACCD;">export CHROMIUM_PATH=\`which chromium\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_2-navegue-hasta-el-directorio-de-servicios-configure-su-archivo-env-e-instale-las-dependencias" tabindex="-1">2. Navegue hasta el directorio de servicios, configure su archivo env e instale las dependencias <a class="header-anchor" href="#_2-navegue-hasta-el-directorio-de-servicios-configure-su-archivo-env-e-instale-las-dependencias" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">cd packages/puppeteer-parse</span></span>
<span class="line"><span style="color:#A6ACCD;">cp .env.example .env</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="_3-inicie-el-servicio" tabindex="-1">3. Inicie el servicio <a class="header-anchor" href="#_3-inicie-el-servicio" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">yarn start</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Esto iniciará el servicio puppeteer-parse en el puerto 9090.</p><p>En su navegador vaya a <code>http://localhost:3000/home</code>, haga clic en el botón <code>Add Link</code>, e ingrese una URL como <code>https://blog.omnivore.app/p/getting-started-with-omnivore</code>.</p><p>Debería ver una ventana de Chromium abierta y navegar hasta su enlace. Cuando el servicio termine de buscar su contenido, lo verá en su biblioteca.</p>`,29);function u(a,h,v,g,m,C){return l(),n("div",null,[e("h1",t,[o(r(a.$frontmatter.title)+" ",1),p]),d])}const b=s(c,[["render",u]]);export{f as __pageData,b as default};
